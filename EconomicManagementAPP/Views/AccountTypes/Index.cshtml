@model IEnumerable<AccountTypes>

@{
    ViewData["Title"] = "Account Types";
}

<h1>List of Account Types</h1>
<h5>Account Type refers to how we can group our accounts. For example: Loans, Debit cards, etc.</h5>
<a asp-action="Create" class="btn btn-primary mb-3">Create new</a>

@if(Model.Any()){
<table class="table">
    <thead>
        <tr>
            <th>Actions</th>
            <th>Name</th>
        </tr>
    </thead>
    <tbody id="sortable">
        @foreach (var accountTypes in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@accountTypes.Id" class="ids" />
                    <a class="btn btn-primary" asp-action="Modify" asp-route-id="@accountTypes.Id">Modify</a>
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@accountTypes.Id">Delete</a>
                </td>
                <td>
                    @accountTypes.Name
                </td>
            </tr>
        }
    </tbody>
</table>
}@if(!Model.Any()){
    <h1>
        No results
    </h1>
}

@section Scripts {
    <script>

    const urlSort = '@Url.Action("sort")';
      $(function(){
          $("#sortable").sortable({
              stop: async function(e, ui){
                  await updateOrder();
                }
            });

          async function updateOrder(){
              const ids = getFieldsIds();
              await sentIdsToBackend(ids);
          }

          function getFieldsIds(){
              const ids = $(".ids").map(function(){
                return $(this).val();
              }).get();

              return ids;
          }

          async function sentIdsToBackend(ids){
            var data = JSON.stringify(ids);
            await fetch(urlSort, {
                method: 'POST',
                body: data,
                headers: {
                'Content-Type': 'application/json'
                }
            });

          }

        })
    </script>
  }
